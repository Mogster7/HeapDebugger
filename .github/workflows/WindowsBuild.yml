name: CMake_Windows_MSVC

on: [push]


jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#configuring-a-build-matrix
    runs-on: windows-latest

    steps:
      # Add MS Build  
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      # with:
        # vs-version: '[16.4]'
    
      # Checkout the repository
    - uses: actions/checkout@v2
        
    - name: Create Build Environment
      # Equivalent of mkdir 
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Run CMAKE to generate make file
      run: cmake $GITHUB_WORKSPACE -G "Visual Studio 16 2019" -A x64

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build .

#     - name: Test
#       working-directory: ${{runner.workspace}}/build
#       shell: bash
#       run: ./HeapDebugger echo "Testing project"
